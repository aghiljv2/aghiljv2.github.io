__NUXT_JSONP__("/blog/5 Mistakes Front-end Developers should Avoid", (function(a,b,c,d,e,f,g,h,i,j,k){return {data:[{post:{name:g,titleImage:k,briefdesc:h,toc:[],body:{type:"root",children:[{type:b,tag:e,props:{},children:[{type:a,value:"\n  Front-end Developers or front-end Engineers are the responsible bunch for the\n  visual elements that the users see and interact with. From text, colours and\n  size of buttons, images, menus etc... front-end is all about what's visible to\n  the users. It is imperative that interfaces are pleasing to the eye of the\n  users as well as engaging for the success of an application, not to mention a\n  good design.\n"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"\n  Front-end developers should understand the users to ensure prime functioning\n  of their application. But still, there are some mistakes often made. Here we\n  are focussing on 5 of them. These should be avoided to ensure a good user\n  base.\n"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:b,tag:f,props:{},children:[{type:a,value:"1. Coding with Older HTML Standards"}]},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:i,props:{style:j,src:"\u002Fimg\u002Fblog\u002F200420\u002Fhtml5.png",alt:"html5"},children:[]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"\n  Many front-end developers stopped the practice of coding with old HTML\n  elements after HTML5 came into existence as the newest form of HTML. HTML5\n  allowed making a lot of changes in standard page design. As a matter of fact,\n  front-end development has a heavy reliance on browser support. And, some\n  browsers don’t get support from older HTML, which can become a burden in a\n  long run. With older HTML, the front-end of your site could also go devoid of\n  many modern and secure features that HTML5 is capable of bringing to your\n  site. Therefore, coding with older HTML could put your site at risk of\n  security attacks.\n"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:b,tag:f,props:{},children:[{type:a,value:"2. Using Obsolete JavaScript Libraries"}]},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"\n  JavaScript libraries that will not be supported or maintained years later\n  could inflict adverse impacts on your site. If support is no longer available\n  for a JavaScript library that you used to build the front-end of your site,\n  you will find yourself in a difficult situation. You may eventually have a\n  dependency that is no longer functional.\n"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"\n  So, it’s good for you to choose JavaScript libraries with active support,\n  documentation, and consistent updates by their developers. It’s also important\n  to ensure that the popular libraries you choose will be maintained for years\n  to come. It's always wise to go for libraries that are supported by big brands\n  as they tend to last longer than most.\n"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:b,tag:f,props:{},children:[{type:a,value:"3. Not Testing Code with Major Browsers"}]},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:i,props:{style:j,src:"\u002Fimg\u002Fblog\u002F200420\u002Fbrowsers.png",alt:"browsers"},children:[]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"\n  If you miss out on testing your code for all the major browsers, your site\n  could lose users who still like to use the same older browsers. JavaScript and\n  client-side scripting are intrinsic part of front-end development. Therefore,\n  it’s important to test your code in all the major browsers. Front-end\n  developers can put into use their sites’ browsing analytics data to identify\n  common browsers they would like to support.\n"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:b,tag:f,props:{},children:[{type:a,value:"4. Not Creating Responsive Mobile Design"}]},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:i,props:{style:j,src:"\u002Fimg\u002Fblog\u002F200420\u002Fres.jpg",alt:"responsive"},children:[]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"\n  We have entered an era where people like to browse the web on phones rather\n  than desktops. The rising trend of internet surfing on mobile phones makes it\n  important to create a front-end design that is responsive and mobile-friendly.\n  Modern front-end coding entails responsive design as default.\n"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"\n  If users are unable to access your site on their smartphones, they become\n  likely to move to your competitors whose sites are easily accessible via their\n  smartphones. Google has also stated many times earlier that responsive design\n  is their preferred mobile configuration. It means responsive site and separate\n  mobile sites get ranking boost in search results way higher than those sites\n  that are unresponsive or not mobile-friendly.\n"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"\n  Since mobile devices have varied screen sizes, it’s worth writing code that\n  supports all possible breakpoints. Developers can use emulators for testing to\n  avoid the hassle of dealing with several devices.\n"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:b,tag:f,props:{},children:[{type:a,value:"5. No Focus on Site Speed"}]},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"\n  Site speed directly affects bounce rates, conversion rates, revenue and user\n  satisfaction. Site speed depends on various factors. For example, client side\n  can become slow due to Spaghetti JavaScript code, whereas large images can\n  slow down page loading speed. Slow sites frustrate users, thus it’s beneficial\n  to put into use site speed testers that identify design elements responsible\n  for slowing down your site. Good site speed is also important from SEO\n  perspective as it is one of the factors search engines take into account for\n  rankings. Therefore, it’s a good practice to keep on testing your site and\n  keep a track over its performance.\n"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"\n  "},{type:b,tag:f,props:{},children:[{type:a,value:"A front-end developer could easily avoid these common mistakes and ensure\n    that their site is easy to use and loads fast. Moreover, good JavaScript\n    libraries and supported code help design a responsive and mobile friendly\n    site, which has become the need of the hour."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"\n  Disclaimer : The views and opinions expressed in the text belong solely to the\n  author, and not necessarily to the author's employer, organisation, committee\n  or other group or individual.\n"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:b,tag:d,props:{},children:[]}]},dir:"\u002Fblogs",path:"\u002Fblogs\u002F5 Mistakes Front-end Developers should Avoid",extension:".md",slug:g,createdAt:"2020-09-10T14:06:37.974Z",updatedAt:"2020-09-10T14:07:57.968Z"},blogItem:{_id:"5ea5043c0929853a0f407a9f",name:g,titleImage:k,briefdesc:h,content:"\u003Cp\u003E \tFront-end Developers or front-end Engineers are the responsible bunch for the visual elements that the users see and \tinteract with. From text, colours and size of buttons, images, menus etc... front-end is all about what's visible to \tthe users. It is imperative that interfaces are pleasing to the eye of the users as well as engaging for the success \tof an application, not to mention a good design. \u003C\u002Fp\u003E \u003Cbr \u002F\u003E \u003Cp\u003E \tFront-end developers should understand the users to ensure prime functioning of their application. But still, there \tare some mistakes often made. Here we are focussing on 5 of them. These should be avoided to ensure a good user \tbase. \u003C\u002Fp\u003E \u003Cbr \u002F\u003E \u003Cbr \u002F\u003E\u003Cb\u003E1. Coding with Older HTML Standards\u003C\u002Fb\u003E\u003Cbr \u002F\u003E \u003Cbr \u002F\u003E \u003Cimg style=\"width: 100%;\" src=\"\u002Fimg\u002Fblog\u002F200420\u002Fhtml5.png\" alt=\"html5\" \u002F\u003E \u003Cbr \u002F\u003E\u003Cbr \u002F\u003E \u003Cp\u003E \tMany front-end developers stopped the practice of coding with old HTML elements after HTML5 came into existence as \tthe newest form of HTML. HTML5 allowed making a lot of changes in standard page design. As a matter of fact, \tfront-end development has a heavy reliance on browser support. And, some browsers don’t get support from older HTML, \twhich can become a burden in a long run. With older HTML, the front-end of your site could also go devoid of many \tmodern and secure features that HTML5 is capable of bringing to your site. Therefore, coding with older HTML could \tput your site at risk of security attacks. \u003C\u002Fp\u003E \u003Cbr \u002F\u003E \u003Cbr \u002F\u003E\u003Cb\u003E2. Using Obsolete JavaScript Libraries\u003C\u002Fb\u003E\u003Cbr \u002F\u003E \u003Cbr \u002F\u003E \u003Cp\u003E \tJavaScript libraries that will not be supported or maintained years later could inflict adverse impacts on your \tsite. If support is no longer available for a JavaScript library that you used to build the front-end of your site, \tyou will find yourself in a difficult situation. You may eventually have a dependency that is no longer functional. \u003C\u002Fp\u003E \u003Cbr \u002F\u003E \u003Cp\u003E \tSo, it’s good for you to choose JavaScript libraries with active support, documentation, and consistent updates by \ttheir developers. It’s also important to ensure that the popular libraries you choose will be maintained for years \tto come. It's always wise to go for libraries that are supported by big brands as they tend to last longer than \tmost. \u003C\u002Fp\u003E \u003Cbr \u002F\u003E \u003Cbr \u002F\u003E\u003Cb\u003E3. Not Testing Code with Major Browsers\u003C\u002Fb\u003E\u003Cbr \u002F\u003E \u003Cbr \u002F\u003E \u003Cimg style=\"width: 100%;\" src=\"\u002Fimg\u002Fblog\u002F200420\u002Fbrowsers.png\" alt=\"browsers\" \u002F\u003E \u003Cbr \u002F\u003E\u003Cbr \u002F\u003E \u003Cp\u003E \tIf you miss out on testing your code for all the major browsers, your site could lose users who still like to use \tthe same older browsers. JavaScript and client-side scripting are intrinsic part of front-end development. \tTherefore, it’s important to test your code in all the major browsers. Front-end developers can put into use their \tsites’ browsing analytics data to identify common browsers they would like to support. \u003C\u002Fp\u003E \u003Cbr \u002F\u003E \u003Cbr \u002F\u003E\u003Cb\u003E4. Not Creating Responsive Mobile Design\u003C\u002Fb\u003E\u003Cbr \u002F\u003E \u003Cbr \u002F\u003E \u003Cimg style=\"width: 100%;\" src=\"\u002Fimg\u002Fblog\u002F200420\u002Fres.jpg\" alt=\"responsive\" \u002F\u003E \u003Cbr \u002F\u003E\u003Cbr \u002F\u003E \u003Cp\u003E \tWe have entered an era where people like to browse the web on phones rather than desktops. The rising trend of \tinternet surfing on mobile phones makes it important to create a front-end design that is responsive and \tmobile-friendly. Modern front-end coding entails responsive design as default. \u003C\u002Fp\u003E \u003Cbr \u002F\u003E \u003Cp\u003E \tIf users are unable to access your site on their smartphones, they become likely to move to your competitors whose \tsites are easily accessible via their smartphones. Google has also stated many times earlier that responsive design \tis their preferred mobile configuration. It means responsive site and separate mobile sites get ranking boost in \tsearch results way higher than those sites that are unresponsive or not mobile-friendly. \u003C\u002Fp\u003E \u003Cbr \u002F\u003E \u003Cp\u003E \tSince mobile devices have varied screen sizes, it’s worth writing code that supports all possible breakpoints. \tDevelopers can use emulators for testing to avoid the hassle of dealing with several devices. \u003C\u002Fp\u003E \u003Cbr \u002F\u003E \u003Cbr \u002F\u003E\u003Cb\u003E5. No Focus on Site Speed\u003C\u002Fb\u003E\u003Cbr \u002F\u003E \u003Cbr \u002F\u003E \u003Cp\u003E \tSite speed directly affects bounce rates, conversion rates, revenue and user satisfaction. Site speed depends on \tvarious factors. For example, client side can become slow due to Spaghetti JavaScript code, whereas large images can \tslow down page loading speed. Slow sites frustrate users, thus it’s beneficial to put into use site speed testers \tthat identify design elements responsible for slowing down your site. Good site speed is also important from SEO \tperspective as it is one of the factors search engines take into account for rankings. Therefore, it’s a good \tpractice to keep on testing your site and keep a track over its performance. \u003C\u002Fp\u003E \u003Cbr \u002F\u003E \u003Cp\u003E \t\u003Cb \t\t\u003EA front-end developer could easily avoid these common mistakes and ensure that their site is easy to use and \t\tloads fast. Moreover, good JavaScript libraries and supported code help design a responsive and mobile friendly \t\tsite, which has become the need of the hour.\u003C\u002Fb \t\u003E \u003C\u002Fp\u003E \u003Cbr \u002F\u003E \u003Cp\u003E \tDisclaimer : The views and opinions expressed in the text belong solely to the author, and not necessarily to the \tauthor's employer, organisation, committee or other group or individual. \u003C\u002Fp\u003E \u003Cbr \u002F\u003E\u003Cbr \u002F\u003E"},title:g,description:h,ogImage:"\u002Fimg\u002Fblog\u002F200420\u002FfrontMistake.jpg",params:{slug:g}}],fetch:[],mutations:[]}}("text","element","\n","br","p","b","5 Mistakes Front-end Developers should Avoid","An article regarding usual mistakes made by most Front-end Developers\u002FEngineers","img","width: 100%","200420\u002FfrontMistake")));