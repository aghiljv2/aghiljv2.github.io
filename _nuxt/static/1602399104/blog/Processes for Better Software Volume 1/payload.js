__NUXT_JSONP__("/blog/Processes for Better Software Volume 1", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){return {data:[{blog:{name:j,titleImage:"240820\u002Fprocess1Title",briefdesc:k,postDate:"August 24, 2020",toc:[],body:{type:"root",children:[{type:a,tag:e,props:{},children:[{type:b,value:"\n  There are a lot of things to keep in mind and processes to follow to make\n  better software. By striving to uphold them, the developers\u002Fengineers are not\n  only creating good software, but also a reputation for themselves.\n"}]},{type:b,value:c},{type:a,tag:d,props:{},children:[]},{type:b,value:c},{type:a,tag:e,props:{},children:[{type:b,value:"\n  They are termed good practices and we will go through some of them today,\n  which by following, has helped me personally to create better software.\n"}]},{type:b,value:c},{type:a,tag:d,props:{},children:[]},{type:b,value:c},{type:a,tag:d,props:{},children:[]},{type:a,tag:g,props:{},children:[{type:b,value:"1. Planning"}]},{type:a,tag:d,props:{},children:[]},{type:b,value:c},{type:a,tag:d,props:{},children:[]},{type:b,value:c},{type:a,tag:h,props:{style:i,src:"\u002Fimg\u002Fblog\u002F240820\u002Fplanning.jpg",alt:"Planning"},children:[]},{type:b,value:c},{type:a,tag:d,props:{},children:[]},{type:a,tag:d,props:{},children:[]},{type:b,value:c},{type:a,tag:e,props:{},children:[{type:b,value:"\n  One should always have a plan of action while developing, no matter which\n  technology\u002Ftechnologies is\u002Fare involved. Being impulsive and just winging it\n  might get you the results in short term, but rest assured, it will come to\n  stab you in the back sooner or later. For example, if you are building a web\n  application, you should consider the requirements beforehand and analyze which\n  technologies and frameworks are apt for those and then start the project, not\n  on the fly.\n"}]},{type:b,value:c},{type:a,tag:d,props:{},children:[]},{type:b,value:c},{type:a,tag:d,props:{},children:[]},{type:a,tag:g,props:{},children:[{type:b,value:"2. Modularising"}]},{type:a,tag:d,props:{},children:[]},{type:b,value:c},{type:a,tag:d,props:{},children:[]},{type:b,value:c},{type:a,tag:h,props:{style:i,src:"\u002Fimg\u002Fblog\u002F240820\u002Fmodularising.jpg",alt:"Modularising"},children:[]},{type:b,value:c},{type:a,tag:d,props:{},children:[]},{type:a,tag:d,props:{},children:[]},{type:b,value:c},{type:a,tag:e,props:{},children:[{type:b,value:"\n  My favorite OOP concept. Files\u002Fclasses\u002Ffunctions\u002Fmethods should be kept as\n  short as possible and doing only the job they are supposed to do. Nothing more\n  and certainly nothing less. This not only ensures and increases the\n  readability of the entire code but also helps in scaling the application in\n  the future.\n"}]},{type:b,value:c},{type:a,tag:d,props:{},children:[]},{type:b,value:c},{type:a,tag:d,props:{},children:[]},{type:a,tag:g,props:{},children:[{type:b,value:"3. Commenting and documenting"}]},{type:a,tag:d,props:{},children:[]},{type:b,value:c},{type:a,tag:d,props:{},children:[]},{type:b,value:c},{type:a,tag:h,props:{style:i,src:"\u002Fimg\u002Fblog\u002F240820\u002Fcommenting.jpg",alt:"Commenting and documenting"},children:[]},{type:b,value:c},{type:a,tag:d,props:{},children:[]},{type:a,tag:d,props:{},children:[]},{type:b,value:c},{type:a,tag:e,props:{},children:[{type:b,value:"\n  This might certainly be the most overlooked part of development. How many of\n  us have went back to something written by ourselves 1 or more years back and\n  wondered what it is all about. (You’ll probably wonder how could you have\n  coded something that bad, but that’s not what I am talking about now). If you\n  have had incorporated necessary comments and prepared a proper documentation,\n  you’d have a much easier job of understanding what it was and how you might be\n  able to improve it.\n"}]},{type:b,value:c},{type:a,tag:d,props:{},children:[]},{type:b,value:c},{type:a,tag:d,props:{},children:[]},{type:a,tag:g,props:{},children:[{type:b,value:"4. Writing tests"}]},{type:a,tag:d,props:{},children:[]},{type:b,value:c},{type:a,tag:d,props:{},children:[]},{type:b,value:c},{type:a,tag:h,props:{style:i,src:"\u002Fimg\u002Fblog\u002F240820\u002Ftests.jpg",alt:"Writing tests"},children:[]},{type:b,value:c},{type:a,tag:d,props:{},children:[]},{type:a,tag:d,props:{},children:[]},{type:b,value:c},{type:a,tag:e,props:{},children:[{type:b,value:"\n  Test driven development should come naturally to every software engineer. You\n  might be tempted to skip it all and get to the results faster. Yes, it most\n  probably will get you the results faster but almost always at some cost. Every\n  software should be tested before going into production. So, if you are not\n  writing tests the first time, your testing team will bring you bug\u002Fbugs and\n  trust me it won’t always be at the most convenient of times or worse, the\n  bug\u002Fbugs might only be found in production. Now, I am not saying just by\n  writing tests, you can create a completely bug free software, but it will\n  certainly help you bring down their numbers significantly.\n"}]},{type:b,value:c},{type:a,tag:d,props:{},children:[]},{type:b,value:c},{type:a,tag:d,props:{},children:[]},{type:a,tag:g,props:{},children:[{type:b,value:"5. Making use of frameworks"}]},{type:a,tag:d,props:{},children:[]},{type:b,value:c},{type:a,tag:d,props:{},children:[]},{type:b,value:c},{type:a,tag:h,props:{style:i,src:"\u002Fimg\u002Fblog\u002F240820\u002Fframeworks.jpg",alt:"Making use of frameworks"},children:[]},{type:b,value:c},{type:a,tag:d,props:{},children:[]},{type:a,tag:d,props:{},children:[]},{type:b,value:c},{type:a,tag:e,props:{},children:[{type:b,value:"\n  Maybe you are the fan of creating everything from scratch and there is\n  absolutely nothing wrong with that. But sometimes you might be solving\n  problems that has already been solved. That is simply wasting time. Nowadays,\n  we have an abundance of frameworks in every technology that are open source\n  and with the backing of huge communities. Use them and concentrate on solving\n  actual problems rather than reinventing the wheel.\n"}]},{type:b,value:c},{type:a,tag:d,props:{},children:[]},{type:b,value:c},{type:a,tag:e,props:{},children:[{type:b,value:"\n  Disclaimer : The views and opinions expressed in the text belong solely to the\n  author, and not necessarily to the author's employer, organisation, committee\n  or other group or individual.\n"}]},{type:b,value:c},{type:a,tag:d,props:{},children:[]},{type:a,tag:d,props:{},children:[]}]},dir:"\u002Fblogs",path:"\u002Fblogs\u002FProcesses for Better Software Volume 1",extension:".md",slug:j,createdAt:"2020-09-10T14:43:12.203Z",updatedAt:"2020-10-04T05:19:57.529Z"},title:j,description:k,ogImage:"\u002Fimg\u002Fblog\u002F240820\u002Fprocess1Title.jpg",params:{slug:j},images:{"/_image/local/_/w_30/img/common/back.webp":l,"/_image/local/webp/_/img/common/back.webp":"\u002F_image\u002F6d6e95.webp","/_image/local/png/_/img/common/back.webp":"\u002F_image\u002Fafaf7b.png","/_image/local/_/w_30/img/blog/240820/process1Title.webp":m,"/_image/local/webp/_/img/blog/240820/process1Title.webp":"\u002F_image\u002Fe46c6f.webp","/_image/local/jpeg/_/img/blog/240820/process1Title.webp":"\u002F_image\u002F3b1ca0.jpeg","/_image/local/_/w_30/img/common/postDate.webp":n,"/_image/local/webp/_/img/common/postDate.webp":"\u002F_image\u002F69f7f0.webp","/_image/local/png/_/img/common/postDate.webp":"\u002F_image\u002Fb63a4f.png","/_image/local/_/w_30/img/common/cookie.webp":o,"/_image/local/webp/_/img/common/cookie.webp":"\u002F_image\u002Fe4ac06.webp","/_image/local/png/_/img/common/cookie.webp":"\u002F_image\u002F720160.png"}}],fetch:[{srcset:[],blurry:l,loading:f,loaded:f},{srcset:[],blurry:m,loading:f,loaded:f},{srcset:[],blurry:n,loading:f,loaded:f},{srcset:[],blurry:o,loading:f,loaded:f}],mutations:[["pageTitle\u002Fset","BLOG"]]}}("element","text","\n","br","p",false,"b","img","width: 100%","Processes for Better Software Volume 1","Best practices for Software Engineers.","\u002F_image\u002Ff7b225.webp","\u002F_image\u002F64b4fe.webp","\u002F_image\u002Fae59ee.webp","\u002F_image\u002F62eb1f.webp")));