__NUXT_JSONP__("/blog/5 Things to motivate you to perform Unit Testing", (function(a,b,c,d,e,f,g,h,i,j){return {data:[{post:{name:g,titleImage:i,briefdesc:j,toc:[],body:{type:"root",children:[{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"1. Reduce the Number of Bugs"}]},{type:a,value:h},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"\n  Taking care of bugs is not only tedious and time-consuming, but issues that\n  appear in production are much more complex than if they had have been\n  discovered in development or staging. By adding unit tests, failures can be\n  detected early on, pretty much as soon as the code is written and the team\n  would be able to take care of any unintended defect without any complications.\n"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:b,tag:f,props:{},children:[{type:a,value:"2. Improve Code Design"}]},{type:a,value:h},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"\n  When you consider implementing unit testing, you have to make sure that your\n  code is testable. Think about it, when you deal with the overall design\n  concept, and you need break down the high-level design to ‘single\n  entity-multiple components’, you’ll be forced to think of each unit and make\n  sure each of them is testable. This improves the overall code design by clear\n  unit separation, defining better unit interfaces and the design concept.\n"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:b,tag:f,props:{},children:[{type:a,value:"3. Improves Teamwork"}]},{type:a,value:h},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"\n  Along with the documentation, it improves teamwork. Your colleagues can review\n  the logic behind your code and coordinate their code accordingly. Being able\n  to review each other’s code, the teamwork is more cohesive and Agile.\n"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:b,tag:f,props:{},children:[{type:a,value:"4. Inspires Confidence"}]},{type:a,value:h},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"\n  You develop software and then you write tests to examine if it works. You will\n  be able to validate in the early stages whether your code is actually\n  functional. Once your tests are passed, you feel confident knowing that your\n  software is in good shape. Many issues could be avoided this way - not\n  everything.\n"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:b,tag:f,props:{},children:[{type:a,value:"5. Easier Changes and Refactoring of Code"}]},{type:a,value:h},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"\n  Automated unit tests catches bugs easily and knowing that makes you feel more\n  confident. Once an issue is detected, you feel more at ease when you have to\n  make changes to your code, even if the changes are beyond trivial ones – any\n  code issue detected before it’s released to production is a victory!\n"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"\n  "},{type:b,tag:f,props:{},children:[{type:a,value:"We as developers hesitate to add unit testing to our work routine. Some\n    refuse to do so because writing extra code adds more time and effort to an\n    already busy day. What is often not considered is that going the extra mile\n    may save time in the long run. Eliminating unit testing is only time-saving\n    if your code is going to work bug free."}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"\n  Disclaimer : The views and opinions expressed in the text belong solely to the\n  author, and not necessarily to the author's employer, organisation, committee\n  or other group or individual.\n"}]},{type:a,value:c},{type:b,tag:d,props:{},children:[]},{type:b,tag:d,props:{},children:[]}]},dir:"\u002Fblogs",path:"\u002Fblogs\u002F5 Things to motivate you to perform Unit Testing",extension:".md",slug:g,createdAt:"2020-09-10T13:49:08.904Z",updatedAt:"2020-09-10T13:50:26.904Z"},blogItem:{_id:"5e95ed541c9d4400008c50be",name:g,titleImage:i,briefdesc:j,content:"\u003Cbr \u002F\u003E \u003Cb\u003E1. Reduce the Number of Bugs\u003C\u002Fb\u003E \u003Cbr \u002F\u003E \u003Cbr \u002F\u003E \u003Cp\u003E \tTaking care of bugs is not only tedious and time-consuming, but issues that appear in production are much more \tcomplex than if they had have been discovered in development or staging. By adding unit tests, failures can be \tdetected early on, pretty much as soon as the code is written and the team would be able to take care of any \tunintended defect without any complications. \u003C\u002Fp\u003E \u003Cbr \u002F\u003E \u003Cbr \u002F\u003E\u003Cb\u003E2. Improve Code Design\u003C\u002Fb\u003E \u003Cbr \u002F\u003E \u003Cbr \u002F\u003E \u003Cp\u003E \tWhen you consider implementing unit testing, you have to make sure that your code is testable. Think about it, when \tyou deal with the overall design concept, and you need break down the high-level design to ‘single entity-multiple \tcomponents’, you’ll be forced to think of each unit and make sure each of them is testable. This improves the \toverall code design by clear unit separation, defining better unit interfaces and the design concept. \u003C\u002Fp\u003E \u003Cbr \u002F\u003E \u003Cbr \u002F\u003E\u003Cb\u003E3. Improves Teamwork\u003C\u002Fb\u003E \u003Cbr \u002F\u003E \u003Cbr \u002F\u003E \u003Cp\u003E \tAlong with the documentation, it improves teamwork. Your colleagues can review the logic behind your code and \tcoordinate their code accordingly. Being able to review each other’s code, the teamwork is more cohesive and Agile. \u003C\u002Fp\u003E \u003Cbr \u002F\u003E \u003Cbr \u002F\u003E\u003Cb\u003E4. Inspires Confidence\u003C\u002Fb\u003E \u003Cbr \u002F\u003E \u003Cbr \u002F\u003E \u003Cp\u003E \tYou develop software and then you write tests to examine if it works. You will be able to validate in the early \tstages whether your code is actually functional. Once your tests are passed, you feel confident knowing that your \tsoftware is in good shape. Many issues could be avoided this way - not everything. \u003C\u002Fp\u003E \u003Cbr \u002F\u003E \u003Cbr \u002F\u003E\u003Cb\u003E5. Easier Changes and Refactoring of Code\u003C\u002Fb\u003E \u003Cbr \u002F\u003E \u003Cbr \u002F\u003E \u003Cp\u003E \tAutomated unit tests catches bugs easily and knowing that makes you feel more confident. Once an issue is detected, \tyou feel more at ease when you have to make changes to your code, even if the changes are beyond trivial ones – any \tcode issue detected before it’s released to production is a victory! \u003C\u002Fp\u003E \u003Cbr \u002F\u003E \u003Cp\u003E \t\u003Cb \t\t\u003EWe as developers hesitate to add unit testing to our work routine. Some refuse to do so because writing extra \t\tcode adds more time and effort to an already busy day. What is often not considered is that going the extra mile \t\tmay save time in the long run. Eliminating unit testing is only time-saving if your code is going to work bug \t\tfree.\u003C\u002Fb \t\u003E \u003C\u002Fp\u003E \u003Cbr \u002F\u003E \u003Cp\u003E \tDisclaimer : The views and opinions expressed in the text belong solely to the author, and not necessarily to the \tauthor's employer, organisation, committee or other group or individual. \u003C\u002Fp\u003E \u003Cbr \u002F\u003E\u003Cbr \u002F\u003E",comments:[{email:"t@t.com",name:"Aghil Jose",comment:"This is test comment to test the e-mail validation",date:"Tue, 08 Sep 2020 15:52:36 GMT"}]},title:g,description:j,ogImage:i,params:{slug:g}}],fetch:[],mutations:[]}}("text","element","\n","br","p","b","5 Things to motivate you to perform Unit Testing"," ","130420\u002Funit","An article that describes the reasons to do Unit Testing.")));